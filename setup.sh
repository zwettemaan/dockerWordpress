export REPO_ROOT=`dirname "$0"`/
pushd "$REPO_ROOT" > /dev/null
export REPO_ROOT=`pwd`/

preamble="#\n# This file is generated by setup.sh from a template and config.txt.\n# It is OK to edit it, but it will be overwritten if/when you re-run setup.sh\n#"

chain=""
HOSTLIST=""
CERTLIST=""
while read -r configLine; do 
	# Trim spaces
	configLine=`echo "${configLine}" | sed 's/(^ *| *$)//g'`
	if [ "${configLine}" != "" ]; then
		# Drop # comment lines
		firstChar=`echo "${configLine}" | cut -c1`
		if [ "${firstChar}" != "#" ]; then

			# Split in keyword and value. Trim spaces from
			# keyword and value and remove optional double quotes

			keyword=`echo "${configLine}" | sed 's/=.*$//g'`			
			keyword=`echo "${keyword}" | sed 's/(^ *| *$)//g'`

			value=`echo "${configLine}" | sed 's/^.*=//g'`
			value=`echo "${value}" | sed 's/(^ *| *$)//g'`
			value=`echo "${value}" | sed 's/^"\(.*\)"$/\1/g'`
			value=`echo "${value}" | sed 's/([\/\\])/\\\1/g'`

			# Will replace !!keyword (e.g. !!PROVIDER) with value
			# in template files

			cmd="sed \"s/!!${keyword}/${value}/g\""
			if [ "${chain}" == "" ]; then
				chain=${cmd}
			else
				chain="${chain} | ${cmd}"
			fi

			if [ "${keyword}" == "ADDITIONAL_DOMAINLIST" ]; then

				DOMAINLIST="${MAIN_DOMAIN}\n"`echo ${value} | tr ',' '\n'`
				echo ${DOMAINLIST} | while read -r domain; do
					if [ "${HOSTLIST}" == "" ]; then
						HOSTLIST="\${IPV4_ADDR} $domain"
						CERTLIST="${domain},*.${domain}"
					else
						HOSTLIST="${HOSTLIST}\n\${IPV4_ADDR} $domain"
						CERTLIST="${CERTLIST},${domain},*.${domain}"
					fi
				done
				cmd="sed \"s/!!HOSTLIST/${HOSTLIST}/g\""
				chain="${chain} | ${cmd}"
			fi

			declare "${keyword}=${value}"
		fi
	fi
done < ${REPO_ROOT}config.txt

echo "${preamble}" > ${REPO_ROOT}config.rb
cat templates/config.rb | bash -c "${chain}" >> ${REPO_ROOT}config.rb

echo "${preamble}" > ${REPO_ROOT}config.sh
cat templates/config.sh | bash -c "${chain}" >> ${REPO_ROOT}config.sh

echo "${preamble}" > ${REPO_ROOT}Vagrantfile
cat templates/Vagrantfile.${PROVIDER} | bash -c "${chain}" >> ${REPO_ROOT}Vagrantfile

echo "${preamble}" > ${REPO_ROOT}bootstrap.sh
cat templates/bootstrap.sh | bash -c "${chain}" >> ${REPO_ROOT}bootstrap.sh

cd "${REPO_ROOT}templates/vagrant/scripts" 
find . -depth 1 | while read scriptFile; do
	cat ${scriptFile} |  bash -c "${chain}" >> ${REPO_ROOT}vagrant/scripts/${scriptFile}
done

if [ ! -d "${REPO_ROOT}ssh" ]; then
	mkdir "${REPO_ROOT}ssh"
fi

if [ ! -d "${REPO_ROOT}vagrant" ]; then
	mkdir "${REPO_ROOT}vagrant"
fi

if [ ! -d "${REPO_ROOT}vagrant/scripts" ]; then
	mkdir "${REPO_ROOT}vagrant/scripts"
fi

if [ ! -d "${REPO_ROOT}vagrant/serverport" ]; then
	mkdir "${REPO_ROOT}vagrant/serverport"
fi

if [ ! -f "${REPO_ROOT}ssh/${PRIVATE_KEY_FILE}" ]; then
	echo ""${REPO_ROOT}ssh/${PRIVATE_KEY_FILE}" does not exist. Running ssh-keygen to create it."
	ssh-keygen -t ed25519 -f "${REPO_ROOT}ssh/${PRIVATE_KEY_FILE}"
fi

echo "Setup complete. Now run 'vagrant up' to set up the virtual machine"