# This Vagrantfile passes SERVERTYPE=DIGOCE_docker to bootstrap.sh
#
# Useful commands:  
#
# vagrant plugin install vagrant-digitalocean
# VAGRANT_LOG=debug vagrant up
#
# Needed to create SSL key using 
#
# ssh-keygen -t ed25519
#
# Otherwise vagrant would stall
#

SERVERTYPE = "DIGOCE_docker"

config_file = './config.rb'
require config_file if File.file? config_file

DIGOCE_PRIVATE_KEY_PATH = "./ssh/" + PRIVATE_KEY_FILE

Vagrant.configure("2") do |config|

  config.vm.define DIGOCE_DROPLET_NAME do |config|
    config.vm.provider :digital_ocean do |provider, override|
      override.ssh.private_key_path = DIGOCE_PRIVATE_KEY_PATH
      override.vm.box = DIGOCE_VM_BOX
      override.vm.box_url = DIGOCE_VM_BOX_URL
      override.nfs.functional = false
      override.vm.allowed_synced_folder_types = :rsync
      provider.ssh_key_name = PRIVATE_KEY_FILE
      provider.token = DIGOCE_PROVIDER_TOKEN
      provider.image = DIGOCE_UBUNTU_VERSION
      provider.region = DIGOCE_PROVIDER_REGION
      provider.size = DIGOCE_PROVIDER_SIZE
      provider.backups_enabled = false
      provider.private_networking = false
      provider.ipv6 = false
      provider.monitoring = false
    end
  end

  config.ssh.keep_alive = true
  config.vm.boot_timeout = 1200
  
  config.vm.synced_folder "./" + SHARED_FOLDER_NAME + "/", "/" + SHARED_FOLDER_NAME, type: "rsync", rsync__args: ["--verbose", "--archive", "-z"]

  config.vm.provision :shell, path: "config.sh"
  config.vm.provision :shell, path: "bootstrap.sh", env: { "SERVERTYPE" => SERVERTYPE }
  
end
