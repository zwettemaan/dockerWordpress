# Install and set up the required ingredients (Vagrant, VirtualBox, Digital Ocean, DNS...) 
# as documented in INSTALL.md
#
# Copy this file (templates/config.txt.template) to config.txt in the root of the repository
#
# Edit this config.txt file to match your requirements
#
# From a command-line session in the repository root, run (Mac, Linux)
#
# ./setup.sh
#
# or (Windows)
#
# setup.bat

# EMAIL: your email address

EMAIL="MY_EMAIL"

# PROVIDER: Where to set up this virtual machine. Currently two options: DIGOCE, 
# i.e. Digital Ocean (internet-accessible) or VBOX, i.e. VirtualBox (local)

PROVIDER="MY_PROVIDER"

# A single server can carry multiple domains, but one of those domains needs to be
# chosen as the 'main' domain. This is also the domain to use for reverse name 
# lookup

MAIN_DOMAIN="MY_MAIN_DOMAIN"

# MAIN_DOCKER_NAME is the name used to name the Docker instances which will run the 
# default WordPress installation. I normally use the significant part of
# the domain name (e.g. drop the country suffix)

MAIN_DOCKER_NAME="MY_DESCRIPTIVE_DOCKER_INSTANCE_NAME"

# Leave OWNCLOUD_BACKUP_SERVER empty if you don't have one
# Otherwise put in the web address that can be used to send
# the backup files to

OWNCLOUD_BACKUP_SERVER="MY_BACKUP_SERVER"

# 
# A comma-separated list of all the other domain names that will be served from this instance. 
# This list should NOT include the MAIN_DOMAIN, and should not include any 'www.' domain variants.
# These scripts assume that if you have domain xyz.com, you also want domain www.xyz.com
# Leave empty if no additional domains (i.e. set to "")
# Do not put spaces between domain names - only commas
# For these to work, you need to provide vagrant/serverport/MY_DOMAIN1 directories with a
# 'frozen' server (either derived from a template, or from an existing server dump)
#

ADDITIONAL_DOMAINLIST="MY_DOMAIN1,MY_DOMAIN2"

#
# PRIVATE_KEY_FILE: Name for a private/public key file pair 
# (.ssh/MY_PRIVATE_KEY_FILE and .ssh/MY_PRIVATE_KEY_FILE.pub)
#
# If the files do not exist yet, they will be generated by setup.sh
#

PRIVATE_KEY_FILE="MY_PRIVATE_KEY_FILE"

#
# MYSQL login info. 
# Pick a MySQL user name, and a password for that user
# Pick another password for the MySQL root user
# Pick a name for the database that needs to be created
# Make sure to escape any & characters in the passwords (\& instead of &)
#

MYSQL_USER="MY_DATABASE_USERNAME"
MYSQL_PASSWORD='MY_DATABASE_PASSWORD'
MYSQL_ROOT_PASSWORD='MY_DATABASE_ROOT_PASSWORD'
MYSQL_DATABASE="MY_DATABASE_NAME"

#
# Only for VirtualBox. Pick an unused local LAN address (probably in the 192.168.xxx.xxx range) 
# and make sure no other instances use the same address
# You can also create a host-only network in VirtualBox and use an address on that network
#

VIRTUALBOX_LOCAL_IP_ADDRESS="MY_LOCAL_LAN_ADDRESS"

#
# For Digital Ocean. 
#
# https://cloud.digitalocean.com/account/api/tokens
#

DIGOCE_PROVIDER_TOKEN="MY_DIGIOCE_PERSONAL_TOKEN"

#
# For CloudFlare
#
# https://dash.cloudflare.com/profile/api-tokens
#
# CLOUDFLARE_API_TOKEN ought to be enough, but fail2ban only supports
# CLOUDFLARE_USER + CLOUDFLARE_GLOBAL_API_KEY so for the time being you need
# to provide these two, and CLOUDFLARE_API_TOKEN is ignored
# https://github.com/fail2ban/fail2ban/pull/3269
#

CLOUDFLARE_USER="MY_CLOUDFLARE_USERID"
CLOUDFLARE_GLOBAL_API_KEY="MY_CLOUDFLARE_GLOBAL_API_KEY"
# CLOUDFLARE_API_TOKEN: NOT SUPPORTED YET (fail2ban)
CLOUDFLARE_API_TOKEN="MY_CLOUDFLARE_GLOBAL_API_KEY" 
